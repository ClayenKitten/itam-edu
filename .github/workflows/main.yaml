name: Main workflow
permissions:
  contents: read
  packages: write

on:
  push:
    branches: [main]

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-22.04
    outputs:
      services: ${{ steps.changed.outputs.services }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - name: Get services
        run: "echo SERVICES=$(cat packages/packages.json) >> $GITHUB_ENV"
      - name: Get changed folders
        id: folders
        uses: tj-actions/changed-files@v45
        with:
          json: true
          escape_json: false
          dir_names: true
          dir_names_max_depth: 1
          path: packages
      - name: Filter changed services
        id: changed
        env:
          FILES: "${{ steps.folders.outputs.all_changed_and_modified_files }}"
          COMMAND: "map(.name as $NAME | select($FILES | map(. == $NAME) | any))"
        run: 'echo services=$(echo "$SERVICES" | jq -c --argjson FILES "$FILES" "$COMMAND") >> $GITHUB_OUTPUT'

  pipeline:
    name: Pipeline
    uses: "./.github/workflows/pipeline.yaml"
    needs: prepare
    if: ${{ needs.prepare.outputs.services != '[]' }}
    strategy:
      matrix:
        service: ${{ fromJson(needs.prepare.outputs.services) }}
      fail-fast: false
    with:
      service: "${{ toJson(matrix.service) }}"

  report:
    name: Report
    uses: "./.github/workflows/report.yaml"
    needs: pipeline
    if: ${{ !cancelled() }}
    secrets:
      chat: "${{ secrets.TELEGRAM_REPORT_CHAT }}"
      token: "${{ secrets.TELEGRAM_REPORT_TOKEN }}"
