version: "3"

silent: true

tasks:
  default:
    cmds: [task --list]

  format:
    desc: Format the whole project
    cmd: npm run format

  check:
    desc: Check code in all packages
    cmd: npm run check --workspaces --if-present

  dev:
    desc: Basic development environment command
    cmds: ["docker compose -f ./compose.dev.yaml {{.CLI_ARGS}}"]

  dev:up:
    desc: Setup development environment
    cmd: |
      docker compose -f ./compose.dev.yaml up \
        --build \
        --no-attach gateway \
        --no-attach dbgate \
        --abort-on-container-failure \
        --watch \
        {{.CLI_ARGS}}
    ignore_error: true

  dev:down:
    desc: Stop development environment
    cmd: docker compose -f ./compose.dev.yaml down

  dev:drop:
    desc: Stop development environment and delete volumes
    prompt: Are you sure? It will remove all volumes, leading to full data loss.
    cmd: docker compose -f ./compose.dev.yaml down -v

  db:dump:
    desc: Dump database schema
    dir: ./packages/db
    cmds:
      - "npm run dbmate dump"
      - "npm run infer"

  db:up:
    desc: Run database migrations
    dir: ./packages/db
    cmds:
      - "npm run dbmate up"
      - "npm run infer"

  db:down:
    desc: Revert database migration
    dir: ./packages/db
    cmds:
      - "npm run dbmate down"
      - "npm run infer"

  db:reup:
    desc: Drop database and reapply database migrations
    dir: ./packages/db
    interactive: true
    cmds:
      - "docker compose -f ../compose.dev.yaml down -v postgres 2>/dev/null"
      - 'echo "Existing database removed"'
      - "docker compose -f ../compose.dev.yaml up postgres -d 2>/dev/null"
      - 'echo "New database started"'
      - "npm run dbmate wait"
      - "npm run dbmate up"
      - "npm run infer"

  db:new:
    desc: Create new migration file
    dir: ./packages/db
    cmds:
      - "npm run dbmate new -- {{.CLI_ARGS}}"
      - "npm run infer"
